--||Начало основоного кода,делал Химич И., правил Каримов А.Г. ||--
WITH a AS (
SELECT
f.ENODEB_ID
,f.CELLID_PCELL
,f.LONGITUDE_25
,f.LATITUDE_25
,f.CARRIER_FREQ
,f.RSRP_PCELL AS RSRP_PCELL_FIRST_DAY
,s.RSRP_PCELL AS RSRP_PCELL_SECOND_DAY
FROM MIP.T_AUTO_TEST f
LEFT JOIN (
SELECT
RSRP_PCELL ,
g.CELLID_PCELL,
LONGITUDE_25 ,
LATITUDE_25
FROM MIP.T_AUTO_TEST g
WHERE LOG_DATE = to_date(:dateto, 'yyyymmdd') AND CLUSTER_NAME = :clname
) s
ON ( s.LONGITUDE_25 = f.LONGITUDE_25 AND s.LATITUDE_25 = f.LATITUDE_25 AND s.CELLID_PCELL = f.CELLID_PCELL)
WHERE f.LOG_DATE = to_date(:datefrom, 'yyyymmdd') AND CLUSTER_NAME = :clname
UNION
SELECT
s.ENODEB_ID
,s.CELLID_PCELL
,s.LONGITUDE_25
,s.LATITUDE_25
,s.CARRIER_FREQ
,f.RSRP_PCELL AS RSRP_PCELL_FIRST_DAY
,s.RSRP_PCELL AS RSRP_PCELL_SECOND_DAY
FROM MIP.T_AUTO_TEST s
LEFT JOIN (
SELECT
RSRP_PCELL ,
g.CELLID_PCELL ,
LONGITUDE_25 ,
LATITUDE_25
FROM MIP.T_AUTO_TEST g
WHERE LOG_DATE = to_date(:datefrom, 'yyyymmdd') AND CLUSTER_NAME = :clname
) f
ON ( s.LONGITUDE_25 = f.LONGITUDE_25 AND s.LATITUDE_25 = f.LATITUDE_25 AND s.CELLID_PCELL = f.CELLID_PCELL)
WHERE s.LOG_DATE = to_date(:dateto, 'yyyymmdd') AND CLUSTER_NAME = :clname
AND f.RSRP_PCELL IS NULL
), b AS (
SELECT
a.ENODEB_ID ,
a.CELLID_PCELL ,
a.LONGITUDE_25 ,
a.LATITUDE_25 ,
a.CARRIER_FREQ,
a.RSRP_PCELL_FIRST_DAY,
a.RSRP_PCELL_SECOND_DAY,
CASE WHEN a.CARRIER_FREQ = 6413 THEN DECODE(a.CELLID_PCELL, band800.F_CELLID_PCELL, band800.S_RSRP_BS_ANOTHER_CELL, band800.F_RSRP_BS_ANOTHER_CELL)
  WHEN a.CARRIER_FREQ IN (1301,525) THEN DECODE(a.CELLID_PCELL, band18002100.F_CELLID_PCELL, band18002100.S_RSRP_BS_ANOTHER_CELL, band18002100.F_RSRP_BS_ANOTHER_CELL)
  WHEN a.CARRIER_FREQ = 3300 THEN DECODE(a.CELLID_PCELL, band2600.F_CELLID_PCELL, band2600.S_RSRP_BS_ANOTHER_CELL, band2600.F_RSRP_BS_ANOTHER_CELL)
  ELSE NULL END AS RSRP_BS_ANOTHER_CELL
FROM a
LEFT JOIN (
SELECT
LONGITUDE_25
,LATITUDE_25
,F_RSRP_BS_ANOTHER_CELL
,F_CELLID_PCELL
,S_RSRP_BS_ANOTHER_CELL
,S_CELLID_PCELL
FROM (
SELECT
LONGITUDE_25
,LATITUDE_25
,CELLID_PCELL
,RSRP_PCELL AS RSRP_BS_ANOTHER_CELL
,ORDERID
FROM (
SELECT
RSRP_PCELL
,CELLID_PCELL
,ROW_NUMBER () OVER (PARTITION BY LONGITUDE_25 , LATITUDE_25 ORDER BY RSRP_PCELL desc) AS ORDERID
,LONGITUDE_25
,LATITUDE_25
FROM MIP.T_AUTO_TEST
WHERE LOG_DATE = to_date(:dateto, 'yyyymmdd') AND CLUSTER_NAME = :clname) a
WHERE ORDERID IN (1,2)
)
PIVOT
(
max(RSRP_BS_ANOTHER_CELL) AS RSRP_BS_ANOTHER_CELL, max(CELLID_PCELL) AS CELLID_PCELL
FOR ORDERID IN (1 F,2 S)
)
) band800
ON band800.LONGITUDE_25 = a.LONGITUDE_25
AND band800.LATITUDE_25 = a.LATITUDE_25
LEFT JOIN (
SELECT
LONGITUDE_25
,LATITUDE_25
,F_RSRP_BS_ANOTHER_CELL
,F_CELLID_PCELL
,S_RSRP_BS_ANOTHER_CELL
,S_CELLID_PCELL
FROM (
SELECT
LONGITUDE_25
,LATITUDE_25
,CELLID_PCELL
,RSRP_PCELL AS RSRP_BS_ANOTHER_CELL
,ORDERID
FROM (
SELECT
RSRP_PCELL
,CELLID_PCELL
,ROW_NUMBER () OVER (PARTITION BY LONGITUDE_25 , LATITUDE_25 ORDER BY RSRP_PCELL desc) AS ORDERID
,LONGITUDE_25
,LATITUDE_25
FROM MIP.T_AUTO_TEST
WHERE LOG_DATE = to_date(:dateto, 'yyyymmdd') AND CLUSTER_NAME = :clname
AND CARRIER_FREQ IN (1301, 525)) a
WHERE ORDERID IN (1,2)
)
PIVOT
(
max(RSRP_BS_ANOTHER_CELL) AS RSRP_BS_ANOTHER_CELL, max(CELLID_PCELL) AS CELLID_PCELL
FOR ORDERID IN (1 F,2 S)
)
) band18002100
ON band18002100.LONGITUDE_25 = a.LONGITUDE_25
AND band18002100.LATITUDE_25 = a.LATITUDE_25
LEFT JOIN (
SELECT
LONGITUDE_25
,LATITUDE_25
,F_RSRP_BS_ANOTHER_CELL
,F_CELLID_PCELL
,S_RSRP_BS_ANOTHER_CELL
,S_CELLID_PCELL
FROM (
SELECT
LONGITUDE_25
,LATITUDE_25
,CELLID_PCELL
,RSRP_PCELL AS RSRP_BS_ANOTHER_CELL
,ORDERID
FROM (
SELECT
RSRP_PCELL
,CELLID_PCELL
,ROW_NUMBER () OVER (PARTITION BY LONGITUDE_25 , LATITUDE_25 ORDER BY RSRP_PCELL desc) AS ORDERID
,LONGITUDE_25
,LATITUDE_25
FROM MIP.T_AUTO_TEST
WHERE LOG_DATE = to_date(:dateto, 'yyyymmdd') AND CLUSTER_NAME = :clname
AND CARRIER_FREQ IN (1301, 525, 3300)) a
WHERE ORDERID IN (1,2)
)
PIVOT
(
max(RSRP_BS_ANOTHER_CELL) AS RSRP_BS_ANOTHER_CELL, max(CELLID_PCELL) AS CELLID_PCELL
FOR ORDERID IN (1 F,2 S)
)
) band2600
ON band2600.LONGITUDE_25 = a.LONGITUDE_25
AND band2600.LATITUDE_25 = a.LATITUDE_25
), c AS (
SELECT
b.*
, CASE   WHEN (RSRP_PCELL_FIRST_DAY > RSRP_PCELL_SECOND_DAY + :rsrpdelta1) AND (RSRP_PCELL_SECOND_DAY > RSRP_BS_ANOTHER_CELL) AND RSRP_PCELL_SECOND_DAY < :rsrplimit1 THEN -1
WHEN (RSRP_PCELL_FIRST_DAY > RSRP_BS_ANOTHER_CELL + :rsrpdelta1) AND (RSRP_PCELL_SECOND_DAY < RSRP_BS_ANOTHER_CELL) AND RSRP_BS_ANOTHER_CELL < :rsrplimit1 THEN -1
WHEN (RSRP_PCELL_SECOND_DAY > RSRP_PCELL_FIRST_DAY + :rsrpdelta2) AND (RSRP_PCELL_FIRST_DAY > RSRP_BS_ANOTHER_CELL) AND RSRP_PCELL_FIRST_DAY < :rsrplimit2 THEN 1
WHEN (RSRP_PCELL_SECOND_DAY > RSRP_BS_ANOTHER_CELL + :rsrpdelta2) AND (RSRP_BS_ANOTHER_CELL > RSRP_PCELL_FIRST_DAY) AND RSRP_BS_ANOTHER_CELL < :rsrplimit2 THEN 1
WHEN RSRP_PCELL_FIRST_DAY IS NULL AND (RSRP_PCELL_SECOND_DAY > RSRP_BS_ANOTHER_CELL + :rsrpdelta2) AND RSRP_BS_ANOTHER_CELL < :rsrplimit2 THEN 1
WHEN RSRP_PCELL_FIRST_DAY IS NULL AND RSRP_PCELL_SECOND_DAY IS NOT NULL AND RSRP_BS_ANOTHER_CELL IS NULL THEN 1
WHEN (RSRP_PCELL_FIRST_DAY > RSRP_BS_ANOTHER_CELL + :rsrpdelta1) AND RSRP_PCELL_SECOND_DAY IS NULL AND RSRP_BS_ANOTHER_CELL < :rsrplimit1 THEN -1
WHEN RSRP_PCELL_FIRST_DAY IS NOT NULL AND RSRP_PCELL_SECOND_DAY IS NULL AND RSRP_BS_ANOTHER_CELL IS NULL THEN -1
WHEN (RSRP_PCELL_FIRST_DAY > RSRP_PCELL_SECOND_DAY + :rsrpdelta1) AND RSRP_BS_ANOTHER_CELL IS NULL AND RSRP_PCELL_SECOND_DAY < :rsrplimit1 THEN -1
WHEN (RSRP_PCELL_SECOND_DAY > RSRP_PCELL_FIRST_DAY + :rsrpdelta2) AND RSRP_BS_ANOTHER_CELL IS NULL AND RSRP_PCELL_FIRST_DAY < :rsrplimit2 THEN 1
ELSE 0 END AS result
FROM b
)


--||Продолжение  основоного кода, делал Каримов А.Г. ||--
SELECT
c.CELLID_PCELL
,(mm.sum_ps_data-cc.sum_ps_data) AS ps_data_vol_delta
,Round( (mm.sum_ps_data/ cc.sum_ps_data)*100,2) AS ps_data_vol_rate
,((mm.sum_rec-cc.sum_rec)/1000000) AS RECEIVED_NON_GBR_BYTES_delta
,Round((mm.sum_rec/ cc.sum_rec)*100,2) AS RECEIVED_NON_GBR_BYTES_rate
,count(result) AS COUNTMEAS
,sum(result) AS SUMCOEFF
,sum(CASE WHEN RESULT =-1 THEN -1 ELSE 0 END) AS num_neg
,sum(CASE WHEN RESULT =1 THEN 1 ELSE 0 END) AS num_pos
,sum(CASE WHEN RESULT =0 THEN 1 ELSE 0 END) AS num_zeros
,ROUND(avg(CASE WHEN RESULT =1 THEN dd.mult ELSE 0 END),2) AS traf_pos_date_one
,Round(avg(CASE WHEN RESULT =-1 THEN dd.mult ELSE 0 END),2) AS traf_neg_date_one
,Round(avg(CASE WHEN RESULT =0 THEN dd.mult ELSE 0 END),2) AS traf_zero_date_one
,ROUND(avg(CASE WHEN RESULT =1 THEN nn.mult ELSE 0 END),2) AS traf_pos_date_two
,Round(avg(CASE WHEN RESULT =-1 THEN nn.mult ELSE 0 END),2) AS traf_neg_date_two
,Round(avg(CASE WHEN RESULT =0 THEN nn.mult ELSE 0 END),2) AS traf_zero_date_two


,ROUND(avg(rr.traf_pos_datefrom1),2) AS traf_pos_date_one_all_cells
,Round(avg(rr.traf_neg_datefrom1),2) AS traf_neg_date_one_all_cells
,Round(avg(rr.traf_zero_datefrom1),2) AS traf_zero_date_one_all_cells


,ROUND(sum(jj.traf_pos_dateto1),2) AS traf_pos_date_two_all_cells
,Round(sum(jj.traf_neg_dateto1),2) AS traf_neg_date_two_all_cells
,Round(sum(jj.traf_zero_dateto1),2) AS traf_zero_date_two_all_cells

,Round((sum(result)/ count(result))*100,2) AS RATE
FROM c

--Вычисляем PS_DATA_VOL ,RECEIVED_NON_GBR_BYTES из геоисинтеза  второго дня
LEFT JOIN (SELECT SUM(MULTI) AS sum_ps_data ,
CELLID_PCELL,
SUM(RECEIVED_NON_GBR_BYTES) AS sum_rec
FROM T_AUTO_TEST tat
WHERE LOG_DATE = to_date(:dateto, 'yyyymmdd')
GROUP BY CELLID_PCELL) mm  ON c.CELLID_PCELL=mm.CELLID_PCELL

--Вычисляем PS_DATA_VOL ,RECEIVED_NON_GBR_BYTES из геоисинтеза  первого дня
LEFT JOIN (SELECT SUM(MULTI) AS sum_ps_data ,CELLID_PCELL,SUM(RECEIVED_NON_GBR_BYTES) AS sum_rec
FROM T_AUTO_TEST tat
WHERE LOG_DATE = to_date(:datefrom, 'yyyymmdd')
GROUP BY CELLID_PCELL) cc  ON c.CELLID_PCELL=cc.CELLID_PCELL

--Вычисляем PS_DATA_VOL*SAMPLE_DENSITY(%) первого дня
LEFT JOIN (
SELECT sum(MULTI) AS mult,CELLID_PCELL
FROM T_AUTO_TEST tat
WHERE LOG_DATE=to_date(:datefrom, 'yyyymmdd')
GROUP BY CELLID_PCELL) dd ON c.CELLID_PCELL=dd.CELLID_PCELL

--Вычисляем PS_DATA_VOL*SAMPLE_DENSITY(%) второго дня
LEFT JOIN (
SELECT sum(MULTI) AS mult,CELLID_PCELL
FROM T_AUTO_TEST tat
WHERE LOG_DATE=to_date(:dateto, 'yyyymmdd')
GROUP BY CELLID_PCELL) nn ON c.CELLID_PCELL=nn.CELLID_PCELL

--Вычисляет количество точек по критерию первого дня
LEFT JOIN (SELECT
	c.CELLID_PCELL
	,ROUND(sum(CASE WHEN RESULT =1 THEN kk.mult ELSE 0 END),2) AS traf_pos_datefrom1
	,Round(sum(CASE WHEN RESULT =-1 THEN kk.mult ELSE 0 END),2) AS traf_neg_datefrom1
	,Round(sum(CASE WHEN RESULT =0 THEN kk.mult ELSE 0 END),2) AS traf_zero_datefrom1

	FROM c
	--Суммирует трафик от всех сот в уникальных точках
	LEFT JOIN (
	SELECT sum(MULTI) AS mult,LATITUDE_25,LONGITUDE_25
	FROM T_AUTO_TEST tat
	WHERE LOG_DATE=to_date(:datefrom, 'yyyymmdd')
	GROUP BY LATITUDE_25,LONGITUDE_25) kk ON (kk.LATITUDE_25=c.LATITUDE_25 AND kk.LONGITUDE_25=c.LONGITUDE_25)   --c.CELLID_PCELL=nn.CELLID_PCELL

	GROUP BY c.CELLID_PCELL
) rr ON c.CELLID_PCELL=rr.CELLID_PCELL

--Вычисляет количество точек по критерию второго дня
LEFT JOIN (SELECT
	c.CELLID_PCELL
	,ROUND(avg(CASE WHEN RESULT =1 THEN kk.mult ELSE 0 END),2) AS traf_pos_dateto1
	,Round(avg(CASE WHEN RESULT =-1 THEN kk.mult ELSE 0 END),2) AS traf_neg_dateto1
	,Round(avg(CASE WHEN RESULT =0 THEN kk.mult ELSE 0 END),2) AS traf_zero_dateto1

	FROM c
	--Суммирует трафик от всех сот в уникальных точках
	LEFT JOIN (
	SELECT sum(MULTI) AS mult,LATITUDE_25,LONGITUDE_25
	FROM T_AUTO_TEST tat
	WHERE LOG_DATE=to_date(:dateto, 'yyyymmdd')
	GROUP BY LATITUDE_25,LONGITUDE_25) kk ON (kk.LATITUDE_25=c.LATITUDE_25 AND kk.LONGITUDE_25=c.LONGITUDE_25)
	GROUP BY c.CELLID_PCELL
) jj ON c.CELLID_PCELL=jj.CELLID_PCELL

--WHERE  c.CELLID_PCELL =89345028 --для теста выбираем конкретный CELLID_PCELL
GROUP BY c.CELLID_PCELL, cc.sum_ps_data ,cc.sum_rec , mm.sum_ps_data ,mm.sum_rec,DD.MULT,nn.MULT,
rr.traf_pos_datefrom1,rr.traf_neg_datefrom1,rr.traf_zero_datefrom1,jj.traf_pos_dateto1,jj.traf_neg_dateto1,jj.traf_zero_dateto1
--||Конец основоного кода||--
